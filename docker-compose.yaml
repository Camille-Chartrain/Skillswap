services:
  bdd:
    image: "postgres:14-alpine"
    ports:
      - '${PORT_BDD}:${PG_PORT}'
    environment:
      POSTGRES_DB: '${PG_DB}'
      POSTGRES_PASSWORD: '${PG_PASSWORD}'
      POSTGRES_USER: '${PG_USER}'
    volumes:
      - ./BACK/db/:/docker-entrypoint-initdb.d/
      - ./PSQL/:/var/lib/postgresql/data/
    restart: unless-stopped
#    healthcheck:
#      test: ["CMD-SHELL", "nc -z localhost $PG_PORT"]
#      interval: 10s
#      retries: 5
#      start_period: 30s
#      timeout: 5s
    container_name: bddLucileCam

  back:
    image: "node:18"
    working_dir: /home/server/Skillswap/BACK
    environment:
      PORT: '${PORT_EXPRESS}'
      SECRET: '${SECRET}'
      PUBLIC_URL: '${PUBLIC_URL}'
      TOKEN_SECRET: '${TOKEN_SECRET}'
      SECRET_POUR_EXPRESS_SESSION: '${SECRET_POUR_EXPRESS_SESSION}'
      PGUSER: '${PG_USER}'
      PGHOST: '${PG_HOST}'
      PGPASSWORD: '${PG_PASSWORD}'
      PGDATABASE: '${PG_DB}'
      PGPORT: '${PG_PORT}'
    ports:
      - '${PORT_BACK}:${PORT_EXPRESS}'
    volumes:
      - ./BACK:/home/server/Skillswap/BACK
      - node_modules_back:/home/server/Skillswap/BACK/node_modules
    command: >
      sh -c "ls -al /home/server/Skillswap/BACK && npm install && npm run dev"
    restart: unless-stopped
#    healthcheck:
#      test: ["CMD-SHELL", "curl -f http://localhost:$PORT_EXPRESS/ || exit 1"]
#      interval: 10s
#      retries: 5
#      start_period: 30s
#      timeout: 5s
    depends_on:
      bdd:
        condition: service_healthy

  front:
    image: "node:18"
    working_dir: /home/server/Skillswap/FRONT
    environment:
      REACT_APP_API_URL: 'https://${API_URL}'
      #REACT_APP_API_URL: 'https://${API_URL}:${PORT_EXPRESS}'
      #REACT_APP_API_URL: 'https://${API_URL}:${PORT_BACK}'
      #REACT_APP_API_URL: 'https://${PUBLIC_URL}:${PORT_BACK}'
      #REACT_APP_API_URL: 'http://${PUBLIC_URL}:${PORT_BACK}'
    ports:
      - '${PORT_FRONT}:${PORT_PARCEL}'
    volumes:
      - ./FRONT:/home/server/Skillswap/FRONT
      - node_modules_front:/home/server/Skillswap/FRONT/node_modules
    command: >
      sh -c "ls -al /home/server/Skillswap/FRONT && npm install && npm start"
    restart: unless-stopped
    depends_on:
      back:
        condition: service_healthy

  adminer:
    image: adminer
    ports:
      - '${ADMINER_PORT}:8080'
    environment:
      ADMINER_DEFAULT_SERVER: '${ADMINER_DEFAULT_SERVER}'
    restart: unless-stopped
    depends_on:
      bdd:
        condition: service_healthy

volumes:
  
  node_modules_back:
  node_modules_front:
